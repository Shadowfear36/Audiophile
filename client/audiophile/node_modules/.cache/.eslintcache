[{"/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/index.js":"1","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/App.js":"2","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/reportWebVitals.js":"3","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Login/Login.js":"4","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Signup/Signup.js":"5","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/context/user.js":"6","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Home/Home.js":"7","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/AudioPlayer.js":"8","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Navbar.js":"9","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Home/HomeCard.js":"10","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/SongList.js":"11","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Search/Search.js":"12","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Music/Music.js":"13","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Settings/Settings.js":"14","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Create/CreatePage.js":"15","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Album/AlbumPage.js":"16","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Playlist/PlaylistPage.js":"17","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Song/Songpage.js":"18","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Song/SongPage.js":"19","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Profile/Profile.js":"20","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/AudioUploadForm.js":"21","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Profile/PSongs.js":"22","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/SongItem.js":"23","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Profile/PAlbums.js":"24","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/AlbumItem.js":"25","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Profile/PPlaylists.js":"26","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Create/CAlbums.js":"27","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Create/CSongs.js":"28","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Create/CPlaylists.js":"29","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Create/SongCard.js":"30","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Create/GroupCard.js":"31","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/PlaylistItem.js":"32","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/SongCard.js":"33"},{"size":722,"mtime":1678939288967,"results":"34","hashOfConfig":"35"},{"size":1983,"mtime":1681367053059,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":1678744051827,"results":"37","hashOfConfig":"35"},{"size":2996,"mtime":1681373770881,"results":"38","hashOfConfig":"35"},{"size":5615,"mtime":1681373889319,"results":"39","hashOfConfig":"35"},{"size":1101,"mtime":1681367053090,"results":"40","hashOfConfig":"35"},{"size":2660,"mtime":1681373738972,"results":"41","hashOfConfig":"35"},{"size":5132,"mtime":1681367053059,"results":"42","hashOfConfig":"35"},{"size":3143,"mtime":1681373944449,"results":"43","hashOfConfig":"35"},{"size":1988,"mtime":1681367053061,"results":"44","hashOfConfig":"35"},{"size":1043,"mtime":1681367053090,"results":"45","hashOfConfig":"35"},{"size":3408,"mtime":1681373840208,"results":"46","hashOfConfig":"35"},{"size":1615,"mtime":1681373783621,"results":"47","hashOfConfig":"35"},{"size":4136,"mtime":1681373872502,"results":"48","hashOfConfig":"35"},{"size":2461,"mtime":1681367053060,"results":"49","hashOfConfig":"35"},{"size":4284,"mtime":1681373659205,"results":"50","hashOfConfig":"35"},{"size":4276,"mtime":1681373804764,"results":"51","hashOfConfig":"35"},{"size":130,"mtime":1678860561952,"results":"52","hashOfConfig":"53"},{"size":2726,"mtime":1681373907169,"results":"54","hashOfConfig":"35"},{"size":3661,"mtime":1681373824166,"results":"55","hashOfConfig":"35"},{"size":2407,"mtime":1681373937028,"results":"56","hashOfConfig":"35"},{"size":568,"mtime":1681367053079,"results":"57","hashOfConfig":"35"},{"size":3163,"mtime":1681373968217,"results":"58","hashOfConfig":"35"},{"size":503,"mtime":1681367053074,"results":"59","hashOfConfig":"35"},{"size":2064,"mtime":1681367053059,"results":"60","hashOfConfig":"35"},{"size":518,"mtime":1681367053079,"results":"61","hashOfConfig":"35"},{"size":1837,"mtime":1681373677952,"results":"62","hashOfConfig":"35"},{"size":719,"mtime":1681367053060,"results":"63","hashOfConfig":"35"},{"size":1945,"mtime":1681373695376,"results":"64","hashOfConfig":"35"},{"size":1053,"mtime":1681367053060,"results":"65","hashOfConfig":"35"},{"size":1318,"mtime":1681367053060,"results":"66","hashOfConfig":"35"},{"size":2253,"mtime":1681367053074,"results":"67","hashOfConfig":"35"},{"size":1263,"mtime":1681367053089,"results":"68","hashOfConfig":"35"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17q5578",{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1krbi29",{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},"/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/index.js",[],[],"/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/App.js",[],[],"/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/reportWebVitals.js",[],[],"/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Login/Login.js",["195","196"],[],"import React, { useState, useEffect, useContext } from 'react'\nimport './login.css';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { UserContext } from \"../../context/user\";\n\n\n\n/**\n * Component for showing Login Page\n *\n * @component\n * @example\n * return (\n *   <Login />\n * )\n */\n\nexport default function Login() {\n\n    /**\n     * Initalizes user context for the page and allows use of userState, setUserState.\n     */\n\n    const { userState, setUserState } = useContext(UserContext);\n\n    /**\n     * Initalizes the use of Navigation \n     * @example\n     * navigate('/)\n     */\n    const navigate = useNavigate();\n\n\n    /**\n     * initialFormState for Login\n     * @type {{email: string, password: string}}\n     */\n\n    //initial state of form\n    const initialFormState = {\n        email: '',\n        password: '',\n    }\n\n    //initialize form state\n    const [formState, setFormState] = useState(initialFormState);\n\n    // handle form input Change\n    const handleChange = (e) => {\n        setFormState({...formState, [e.target.name]: e.target.value});\n    }\n\n    //handle updating userState after successful login\n    const handleUpdate = (obj) => {\n        console.log('handleUpdate input:', obj);\n        if (obj && obj.id) {\n            setUserState({\n                isLoggedIn: true,\n                user_id: obj.id,\n                page: 'home',\n                name: obj.name,\n                username: obj.username,\n                email: obj.email,\n                gender: obj.gender,\n                age: obj.age,\n                password_digest: obj.password_digest,\n                user_type: obj.user_type,\n                currentSong: [],\n                queue: []\n              })\n              navigate('/home')\n        } else {\n            console.error(\"Invalid Object Fetched:\", obj);\n        }\n    }\n\n    //handle form submission\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        fetch('api/login', {\n            method:'POST',\n            headers:{\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(formState)\n        }).then(res => res.json()).then(data => handleUpdate(data))\n    }\n\n\n  return (\n    <div id=\"login-container\">\n        <div id=\"login-bg\">\n            <h1 className=\"logo\" >AudioPhile</h1>\n            <div id=\"login-form-container\">\n                <h3>Welcome Back</h3>\n                <form id=\"login-form\" onSubmit={handleSubmit}>\n                    <label for=\"email\">Email</label>\n                    <input name=\"email\" onChange={handleChange} type=\"text\" value={formState.email}/>\n                    <label for=\"password\">Password</label>\n                    <input name=\"password\" onChange={handleChange} type=\"text\" value={formState.password}/>\n                    <button type=\"submit\">Login</button>\n                    <NavLink to=\"/signup\"><h5>Not Signed Up? </h5></NavLink>\n                </form>\n            </div>\n        </div>\n    </div>\n  )\n}\n","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Signup/Signup.js",["197","198"],[],"import React, { useState, useEffect, useContext } from 'react';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { UserContext } from \"../../context/user\";\nimport './signup.css';\n\n/**\n * Component for showing Signup Page\n *\n * @component\n * @example\n * return (\n *   <Signup />\n * )\n */\n\nexport default function Signup() {\n  //set navigation \n  const navigate = useNavigate();\n\n  // initialize User Context\n  const { userState, setUserState } = useContext(UserContext);\n\n  //<-----form State------>\n  const initialFormState = {\n    name: '',\n    email: '',\n    username: '',\n    password: '',\n    password_confirmation: '',\n    age: 0,\n    gender: 'M',\n    user_type: 'DJ',\n  }\n  //initialize form state and index\n  const [formState, setFormState] = useState(initialFormState);\n  const [formIndex, setFormIndex] = useState(1);\n\n  // handle form input Change\n  const handleChange = (e) => {\n    setFormState({...formState, [e.target.name]: e.target.value});\n  }\n\n    //handle updating userState after successful login\n    const handleUpdate = (obj) => {\n        console.log('handleUpdate input:', obj);\n        if (obj && obj.id) {\n            setUserState({\n                isLoggedIn: true,\n                user_id: obj.id,\n                page: 'home',\n                name: obj.name,\n                username: obj.username,\n                email: obj.email,\n                gender: obj.gender,\n                age: obj.age,\n                password_digest: obj.password_digest,\n                user_type: obj.user_type,\n                currentSong: [],\n                queue: []\n              })\n              navigate('/home')\n        } else {\n            console.error(\"Invalid Object Fetched:\", obj);\n        }\n    }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(\"api/users\", {\n      method:'POST',\n      headers:{\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(\n        formState)\n    }).then(res => res.json())\n    .then(obj => handleUpdate(obj))\n  }\n\n  const displayForm = () => {\n    if (formIndex === 1) {\n      return form1 \n    }\n\n    if (formIndex === 2) {\n      return form2\n    }\n\n    if (formIndex === 3) {\n      return form3\n    }\n  };\n\n  const handleType = (e) => {\n    e.preventDefault();\n    if (e.target.name === 'DJ') {\n        setFormState({...formState, user_type: \"DJ\"});\n    }\n\n    if (e.target.name === 'Producer') {\n      setFormState({...formState, user_type: \"Producer\"});\n    }\n\n    if (e.target.name === 'Artist') {\n      setFormState({...formState, user_type: \"Artist\"});\n    }\n    else {\n      setFormState({...formState, user_type: \"DJ\"});\n    }\n  };\n\n\n  const form1 = <>\n                    <label for=\"name\">Name</label>\n                    <input type=\"text\" name=\"name\" value={formState.name} onChange={handleChange} />\n                    <label for=\"username\">Username</label>\n                    <input type=\"text\" name=\"username\" value={formState.username} onChange={handleChange}/>\n                    <label for=\"email\">Email</label>\n                    <input type=\"text\" name=\"email\" value={formState.email} onChange={handleChange}/>\n                    <button onClick={() => setFormIndex(2)}>Next</button>\n  </>\n\n  const form2 = <>  \n                    <div id=\"form2-top\">\n                      <div id=\"age-wrap\">\n                        <label for=\"age\">Age</label>\n                        <input id=\"num-inp\" type=\"number\" name=\"age\" min={0} onChange={handleChange} value={formState.age} />\n                      </div>\n                      <div id=\"gen-wrap\">\n                        <label for=\"gender\">Gender</label>\n                        <select id=\"signup-sel\" name=\"gender\" onChange={handleChange} value={formState.gender}>\n                          <option value=\"M\">Male</option>\n                          <option value=\"F\">Female</option>\n                          <option value=\"\">Prefer Not To Say</option>\n                        </select>\n                      </div>\n                    </div>\n                    <div id=\"btn-cluster\">\n                      <button name=\"DJ\" onClick={handleType}>DJ</button>\n                      <button id=\"btn-mid\" name=\"Producer\" onClick={handleType}>Producer</button>\n                      <button name=\"Artist\" onClick={handleType}>Artist</button>\n                    </div>\n                    <br/>\n                    <div id=\"btn-cluster\">\n                      <button onClick={() => setFormIndex(1)}>Back</button>\n                      <button onClick={() => setFormIndex(3)}>Next</button>\n                    </div>\n  </>\n\n  const form3 = <>\n                    <label required for=\"password\">Password</label>\n                    <input type=\"password\" name=\"password\" onChange={handleChange} value={formState.password}/>\n                    <label for=\"password_confirmation\">Confirm Password</label>\n                    <input required type=\"password\" name=\"password_confirmation\" onChange={handleChange} value={formState.password_confirmation}/>\n                    <button onClick={()=> setFormIndex(2)}>Back</button>\n                    <button onClick={handleSubmit}>Submit</button>\n  </>\n\n\n  return (\n    <div id=\"signup-container\">\n        <div id=\"login-bg\">\n            <h1 className=\"logo\">AudioPhile</h1>\n            <div id=\"signup-form-container\">\n                <h3>Sign Up</h3>\n                <form id=\"signup-form\">\n                    {displayForm()}\n                    <NavLink to=\"/\"><h5>Already Have An Account? </h5></NavLink>\n                </form>\n            </div>\n        </div>\n    </div>\n  )\n}\n","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/context/user.js",[],[],"/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Home/Home.js",["199","200","201","202","203","204"],[],"import React, { useEffect, useState, useContext } from 'react'\nimport './home.css';\nimport AudioPlayer from '../AudioPlayer'\nimport Navbar from '../Navbar.js';\nimport SongCard from '../SongCard'\nimport AlbumItem from '../AlbumItem';\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from \"../../context/user\";\n/**\n * Component for showing trending songs, albums, and playlists. Sorted by likes & comments length.\n *\n * @component\n * @example\n * return (\n *   <Home />\n * )\n */\n\nexport default function Home() {\n  const [songs, setSongs] = useState([]);\n  const [albums, setAlbums] = useState([]);\n  const [playlists, setPlaylists] = useState([]);\n\n  // initialize User Context\n  const { userState, setUserState } = useContext(UserContext);\n  \n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetch(\"api/trending\")\n    .then(res => res.json())\n    .then((obj) => {\n      setSongs(obj.songs)\n      setAlbums(obj.albums)\n      setPlaylists(obj.playlists)\n    })\n  },[]);\n\n  const renderSongs = songs.map((song) => {\n    return <div id=\"home-song\" onClick={() => navigate(`/song/${song.id}`)}>\n        <img src={song.image_url} />\n        <p>{song.name}</p>\n    </div>\n  })\n  const renderAlbums = albums.map((album) => {\n    return <div id=\"home-song\" onClick={() => navigate(`/album/${album.id}`)}>\n      <img src={album.image_url} />\n      <p>{album.name}</p>\n    </div>\n  })\n\n  const renderPlaylists = playlists.map((playlist) => {\n    return <div id=\"home-song\" onClick={() => navigate(`/playlist/${playlist.id}`)}>\n      <img src={playlist.image_url} />\n      <p>{playlist.name}</p>\n    </div>\n  });\n\n  \n  return (\n    userState.isLoggedIn ? <div id=\"home-container\">\n        <Navbar page={'home'}/>\n        <div id=\"home-wrapper\">\n          <h2>Trending</h2>\n            <h4>Songs</h4>\n            <div id=\"tren-songs\">\n              {renderSongs}\n            </div>\n            <h4>Albums</h4>\n            <div id=\"tren-songs\">\n              {renderAlbums}\n            </div>\n            <h4>Playlists</h4>\n            <div id=\"tren-songs\">\n              {renderPlaylists}\n            </div>\n            <div className=\"audio-player-container\">\n                <AudioPlayer />\n            </div>\n        </div>\n    </div> : <div id=\"notloggedIn\">\n      <div>\n        <h1>Audiophile</h1>\n      </div>\n      <div id=\"log-container\">\n        <h2>Uhh Ohh</h2>\n        <p>You are not logged in. Please Log In Or Sign Up.</p>\n        <div id=\"btn-log\">\n          <button onClick={() => navigate('/')}>Login</button>\n          <button onClick={() => navigate('/signup')}>Sign Up</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/AudioPlayer.js",["205","206","207","208","209"],[],"import React, { useState, useRef, useEffect, useContext } from 'react';\nimport './audioplayer.css';\nimport { BsFillPlayFill, BsFillPauseFill } from \"react-icons/bs\"\nimport { UserContext } from \"../context/user\";\n\n/**\n * Component for showing an audio player\n *\n * @component\n * @example\n * return (\n *   <AudioPlayer />\n * )\n */\n\nfunction AudioPlayer() {\n\n  // initialize User Context\n  const { userState, setUserState } = useContext(UserContext);\n\n  const [index, setIndex] = useState(0)\n\n  \n  const checkIfQueueIsEmpty = () => {\n    if (userState.queue.length === 0) {\n      return false\n    } else {\n      return true\n    }\n  }\n\n  const blankQueue = {\n      \"id\": 1,\n      \"name\": \"Add A Song\",\n      \"user_id\": 1,\n      \"audio_url\": null,\n      \"artist\": \"username\",\n      \"album\": {\n        \"id\": 1,\n        \"name\": \"First Album\",\n        \"user_id\": 1,\n        \"likes\": [],\n        \"created_at\": \"2023-03-20T15:48:48.446Z\",\n        \"updated_at\": \"2023-03-20T15:48:48.446Z\"\n      }\n  }\n\n  \n  const [currentSong, setCurrentSong] = useState(checkIfQueueIsEmpty()? userState.queue[index] : blankQueue)\n\n  // console.log(currentSong2);\n\n  //set states\n  const [currentTime, setCurrentTime] = useState(0);\n  const [volume, setVolume] = useState(0.5);\n  const [duration, setDuration] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isEnded, setIsEnded] = useState();\n  // create a reference to the Audio tag itself\n  const audioRef = useRef(null);\n\n  //useEffect to ensure it only attempts to fetch metadata once\n  useEffect(() => {\n    const audio = audioRef.current;\n\n    //updates time location of song\n    const handleTimeUpdate = () => {\n      setCurrentTime(audio.currentTime);\n    };\n\n    // updates song duration from file metadata\n    const handleLoadedMetadata = () => {\n      setDuration(audio.duration);\n    };\n\n    //event listeners to call on above functions\n    audio.addEventListener('timeupdate', handleTimeUpdate);\n    audio.addEventListener('loadedmetadata', handleLoadedMetadata);\n\n    //once metadata retrieved quit listening for changes\n    return () => {\n      audio.removeEventListener('timeupdate', handleTimeUpdate);\n      audio.removeEventListener('loadedmetadata', handleLoadedMetadata);\n    };\n  }, [audioRef.current]);\n\n  //handle volume change on range\n  const handleVolumeChange = (event) => {\n    setVolume(event.target.value);\n    audioRef.current.volume = event.target.value;\n  };\n\n  //handle time change on progress range\n  const handleTimeChange = (event) => {\n    setCurrentTime(event.target.value);\n    audioRef.current.currentTime = event.target.value;\n  };\n\n  //play pause handler\n  const handlePlayPauseClick = () => {\n    const audio = audioRef.current;\n    if (isPlaying) {\n      audio.pause();\n    } else {\n      audio.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  // useEffec\n  // setIsEnded(audioRef.current.ended)\n\n  // audioRef.current.ended ? setIndex(index + 1) : console.log('playing');\n\n\n  const handleNext = (e) => {\n    e.preventDefault();\n    if (index < userState.queue.length - 1) {\n      setIndex(index + 1)\n      setCurrentSong(userState.queue[index]);\n      setCurrentTime(0);\n    }else {\n      console.log(\"Nothing left to skip to\");\n    }\n  }\n\n  const handlePrev = (e) => {\n    e.preventDefault();\n    if (index > 1) {\n      setIndex(index - 1)\n      setCurrentSong(userState.queue[index]);\n    }else {\n      console.log(\"Nothing left to go back to\");\n    }\n  }\n\n  return (\n    <div id=\"audio-player-container\">\n        <img id=\"album\" src={currentSong.image_url}/>\n        <div id=\"artist-info2\">\n            <h3>{currentSong.name}</h3>\n            <h5>@{currentSong.artist}</h5>\n        </div>\n    <div className=\"audio-player\">\n      <audio ref={audioRef} src={currentSong.audio_url} />\n            <div id=\"volume-container\">\n                <label id=\"volume-wrapper\">\n                    Volume\n                    <input\n                    id=\"volume-controller\"\n                    type=\"range\"\n                    min=\"0\"\n                    max=\"1\"\n                    step=\"0.01\"\n                    value={volume}\n                    onChange={handleVolumeChange}\n                    />\n                </label>\n            </div>\n        <div id=\"top-player\">\n            <div id=\"audio-btn-container\">\n                <button onClick={handlePrev}>{'<<'}</button>\n                <button id=\"audio-btn\" onClick={handlePlayPauseClick}>\n                {isPlaying ? <BsFillPauseFill size={30}/> : <BsFillPlayFill size={30}/>}\n                </button>\n                <button onClick={handleNext}>{'>>'}</button>\n            </div>\n        </div>\n        <div id=\"bottom-player\">\n            <label id=\"time-scrub-wrapper\">\n                <input\n                id=\"time-scrub\"\n                type=\"range\"\n                min=\"0\"\n                max={duration}\n                value={currentTime}\n                onChange={handleTimeChange}\n                />\n                {Math.floor(currentTime)}/{Math.floor(duration)}\n            </label>\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AudioPlayer;","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Navbar.js",["210"],[],"import React, { useState, useContext, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from \"../context/user\";\nimport './navbar.css';\n\n/**\n * Component for showing the navigation bar\n *\n * @component\n * @example\n * return (\n *   <Navbar />\n * )\n */\n\nexport default function Navbar({ page }) {\n\n    //initialize navigation\n    const navigate = useNavigate();\n\n    // initialize User Context\n    const { userState, setUserState } = useContext(UserContext);\n\n    const handleLogout = () => {\n      fetch('api/logout', {\n        method: 'POST',\n        headers:{\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({user_id: userState.user_id})\n      }).then(res => res.json()).then(console.log).then(() => {\n        setUserState({\n          isLoggedIn: false,\n          user_id: '',\n          page: '',\n          name: '',\n          username: '',\n          email: '',\n          age: '',\n          gender: '',\n          password_digest: '',\n          user_type: '',\n          currentSong: [],\n          queue: []\n        })\n\n        navigate('/')\n        \n      })\n    }\n\n    const [homeState, setHomeState] = useState(false)\n    const [searchState, setSearchState] = useState(false)\n    const [musicState, setMusicState] = useState(false)\n    const [settingsState, setSettingsState] = useState(false)\n    const [createState, setCreateState] = useState(false)\n    const [profileState, setProfileState] = useState(false)\n    useEffect(() => {\n      if (page !== undefined) {\n        if (page === \"home\") {\n          setHomeState(true)\n        }\n        if (page === \"search\") {\n          setSearchState(true)\n        }\n        if (page === 'music') {\n          setMusicState(true)\n        }\n        if (page === 'profile') {\n          setProfileState(true)\n        }\n        if (page === 'settings') {\n          setSettingsState(true)\n        }\n        if (page === 'create') {\n          setCreateState(true)\n        }\n      }\n    })\n\n  return (\n    <div id=\"navbar-container\">\n        <div id=\"nav-top-wrapper\">\n            <button id=\"nav-btn\" className={createState ? \"active\" : null} onClick={() => navigate('/create')}>Create</button>\n        </div>\n        <div id=\"nav-mid-wrapper\">\n            <button name=\"home\"  id=\"nav-btn\" className={homeState ? \"active\" : null }onClick={() => navigate('/home')}>Home</button>\n            <button name=\"search\" className={searchState ? \"active\" : null} id=\"nav-btn\" onClick={() => navigate('/search')}>Search</button>\n            <button name=\"music\" className={musicState ? \"active\" : null} id=\"nav-btn\" onClick={() => navigate('/music')}>Music</button>\n            <button name=\"profile\"className={profileState ? \"active\" : null} id=\"nav-btn\" onClick={() => navigate(`/profile/${userState.username}`)}>Profile</button>\n            <button name=\"settings\" className={settingsState ? \"active\" : null} id=\"nav-btn\" onClick={() => navigate('/settings')}>Settings</button>\n        </div>\n        <div id=\"nav-btm-wrapper\">\n         <button onClick={handleLogout} id=\"nav-btn\">Logout</button>\n        </div>\n    </div>\n  )\n}\n","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Home/HomeCard.js",["211","212"],[],"import React, { useState, useEffect } from 'react'\nimport './homecard.css';\nimport SongList from '../SongList';\nimport { useNavigate } from 'react-router-dom';\n\n/**\n * Component for showing Song Card\n *\n * @component\n * @example\n * return (\n *   <HomeCard obj={obj} isSong={boolean} />\n * )\n */\n\nexport default function HomeCard( {obj, isSong} ) {\n\n  //allow navigation\n  const navigate = useNavigate();\n\n  const [songs, setSongs] = useState([]);\n\n\n\n  useEffect(() => {\n    if (obj.songs !== undefined && obj.songs.length - 1 >=3) {\n      setSongs([obj.songs[0], obj.songs[1], obj.songs[2]]);\n    } else if (obj.songs !== undefined) {\n      setSongs([obj.songs[0]])\n    }\n    else {\n      setSongs([obj])\n    }\n  }, []);\n\n  const checkImageUrl = () => {\n    if (obj.image_url != null) {\n      console.log(\"true\");\n      return true\n    } else {\n      return false;\n    }\n  }\n\n  console.log(songs)\n  const placeholderURL = \"https://place-hold.it/200\";\n\n  return (\n    <div id=\"home-card-container\">\n      <div id=\"card-details\">\n        <h6 onClick={() => navigate(`/profile/${obj.artist}`)}>@{obj.artist}</h6>\n        <h6>{obj.created_at}</h6>\n      </div>\n      <div id=\"home-card-wrapper\">\n        <img src={checkImageUrl ? obj.image_url : placeholderURL}/>\n        <div id=\"card-info-display\">\n            <div id=\"info-top\">\n              <div id=\"artist-info\">\n                <h3 onClick={() => navigate(`/song/${obj.id}`)}>{obj.name}</h3>\n                <h5 onClick={() => navigate(`/profile/${obj.artist}`)}>{obj.artist}</h5>\n              </div>\n              <div id=\"card-social-btns\">\n                <button onClick={() => navigate(`/song/${obj.id}`)}>Comments</button>\n                <button>Likes: {obj.likes}</button>\n              </div>\n            </div>\n            <div id=\"card-song-container\">\n              <h5>{isSong ? \"Single\" : \"Top 3\"}</h5>\n              <SongList songs={songs} card={true}/>\n            </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/SongList.js",[],[],"/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Search/Search.js",["213","214","215","216","217"],[],"import React, { useState, useEffect, useContext } from 'react'\nimport './search.css';\nimport Navbar from '../Navbar.js';\nimport AudioPlayer from '../AudioPlayer';\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from '../../context/user';\n\n\n/**\n * Component for Allowing Users To Search other Users, Albums, Songs, & Playlists.\n *\n * @component\n * @example\n * return (\n *   <Search />\n * )\n */\n\nexport default function Search() {\n\nconst navigate = useNavigate();\n\nconst [searchTerm, setSearchTerm] = useState('');\nconst [users, setUsers] = useState([]);\nconst [songs, setSongs] = useState([]);\nconst [albums, setAlbums] = useState([]);\nconst [playlists, setPlaylists] = useState([]);\n\nconst { userState, setUserState } = useContext(UserContext);\n\nuseEffect(() => {\n  setUserState({...userState, page: \"search\"})\n  fetch(`api/search/${searchTerm}`)\n  .then(res => res.json()).then((obj) => {\n    setUsers(obj.users)\n    setAlbums(obj.albums)\n    setSongs(obj.songs)\n    setPlaylists(obj.playlists)\n  })\n},[searchTerm]);\n\nconst renderUsers = users.map(user => {\n  let url = user.image_url\n  return <div id=\"user-card\" onClick={()=> navigate(`/profile/${user.username}`)}>\n     <img src={url}/>\n    <h4>@{user.username}</h4>\n  </div>\n});\n\nconst renderSongs = songs.map(song => {\n  console.log(song);\n  return <div id=\"song-card\" onClick={()=> navigate(`/song/${song.id}`)}>\n    <img src={song.image_url}/>\n    <h4>{song.name}</h4>\n    {/* <h6>{song.artist}</h6> */}\n  </div>\n});\n\nconst renderAlbums = albums.map(album => {\n  return <div id=\"album-card-s\" onClick={()=> navigate(`/album/${album.id}`)}>\n    <img src={album.image_url}/>\n    <h4>{album.name}</h4>\n  </div>\n});\n\nconst renderPlaylists = playlists.map(playlist => {\n  console.log(playlist)\n  return <div id=\"album-card-s\" onClick={()=> navigate(`/playlist/${playlist.id}`)}>\n    <img src={playlist.image_url}/>\n    <h4>{playlist.name}</h4>\n  </div>\n});\n\n  return (\n    userState.isLoggedIn ? <div id=\"search-container\">\n      <Navbar page={\"search\"}/>\n      <div id=\"search-wrapper\">\n          <h2>Search</h2>\n          <input id=\"search-bar-input\" placeholder=\"Find Users, Songs, Playlists, & Albums\" onChange={(e) => setSearchTerm(e.target.value)}/>\n          <section id=\"user-section\">\n            <h4>Users</h4>\n            <div id=\"render-container\">\n              {renderUsers}\n            </div>\n          </section>\n          <section>\n            <h4>Songs</h4>\n            <div id=\"render-container\">\n              {renderSongs}\n            </div>\n          </section>\n          <section>\n            <h4>Albums</h4>\n            <div id=\"render-container\">\n              {renderAlbums}\n            </div>\n          </section>\n          <section>\n            <h4>Playlists</h4>\n            <div id=\"render-container\">\n              {renderPlaylists}\n            </div>\n          </section>\n          <div className=\"audio-player-container\">\n                <AudioPlayer />\n          </div>\n      </div>\n    </div> : <div id=\"notloggedIn\">\n      <div>\n        <h1>Audiophile</h1>\n      </div>\n      <div id=\"log-container\">\n        <h2>Uhh Ohh</h2>\n        <p>You are not logged in. Please Log In Or Sign Up.</p>\n        <div id=\"btn-log\">\n          <button onClick={() => navigate('/')}>Login</button>\n          <button onClick={() => navigate('/signup')}>Sign Up</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Music/Music.js",["218","219"],[],"import React, {useEffect, useState, useContext } from 'react'\nimport './music.css';\nimport Navbar from '../Navbar';\nimport AudioPlayer from '../AudioPlayer';\nimport SongList from '../SongList';\nimport { UserContext } from \"../../context/user\";\nimport { useNavigate } from 'react-router-dom';\n/**\n * Component for showing Users Liked Music\n *\n * @component\n * @example\n * return (\n *   <Music />\n * )\n */\n\nexport default function Music() {\n  const [songs, setSongs] = useState([]);\n\n  const navigate = useNavigate();\n\n  // initialize User Context\n  const { userState, setUserState } = useContext(UserContext);\n  \n  useEffect(() => {\n    fetch(`api/users/${userState.username}/likes`)\n    .then(res => res.json()).then(obj => setSongs(obj))\n  },[])\n\n  console.log(songs);\n  return (\n    userState.isLoggedIn ? <div id=\"music-page-container\">\n      <Navbar page={\"music\"}/>\n      <div id=\"music-page-wrapper\">\n        <h2>Liked Songs</h2>\n        <div id=\"song-list-cont\">\n          <div id=\"song-list-wrapper\">\n            <SongList songs={songs} full={true}/>\n          </div>\n        </div>\n        <div className=\"audio-player-container\">\n                <AudioPlayer />\n        </div>\n      </div>\n    </div> : <div id=\"notloggedIn\">\n      <div>\n        <h1>Audiophile</h1>\n      </div>\n      <div id=\"log-container\">\n        <h2>Uhh Ohh</h2>\n        <p>You are not logged in. Please Log In Or Sign Up.</p>\n        <div id=\"btn-log\">\n          <button onClick={() => navigate('/')}>Login</button>\n          <button onClick={() => navigate('/signup')}>Sign Up</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Settings/Settings.js",["220"],[],"import React, { useState, useEffect, useContext } from 'react'\nimport './settings.css';\nimport Navbar from '../Navbar';\nimport { UserContext } from \"../../context/user\";\nimport AudioPlayer from '../AudioPlayer';\nimport {useNavigate } from 'react-router-dom';\n\n/**\n * Component for showing Settings Page\n *\n * @component\n * @example\n * return (\n *   <Settings />\n * )\n */\n\nexport default function Settings() {\n\n  // initialize User Context\n  const { userState, setUserState } = useContext(UserContext);\n\n  //initialize navigation\n  const navigate = useNavigate();\n  \n  const initialFormState = {\n    name: userState.name,\n    email: userState.email,\n    username: userState.username,\n    password: '',\n    password_confirmation: '12345678',\n    age: userState.age,\n    gender: userState.gender,\n    user_type: userState.user_type,\n  }\n\n  //initialize form state\n  const [formState, setFormState] = useState(initialFormState);\n  \n  // handle form input Change\n  const handleChange = (e) => {\n    setFormState({...formState, [e.target.name]: e.target.value});\n  }\n\n  const handleDeleteAcc = (e) => {\n    e.preventDefault();\n    fetch(`api/users/${userState.user_id}`, {\n      method: 'DELETE',\n      headers:{\n        'Content-Type': 'application/json'\n    }\n    }).then(res => res.json()).then((obj)=> {\n      console.log(obj);\n      setUserState({\n        isLoggedIn: false,\n        user_id: '',\n        page: '',\n        name: '',\n        username: '',\n        email: '',\n        age: '',\n        gender: '',\n        password_digest: '',\n        user_type: '',\n        currentSong: [],\n        queue: []\n      })\n      navigate('/')\n    });\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(`api/users/${userState.user_id}`, {\n      method: \"PATCH\",\n      headers:{\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formState)\n    }).then(res => res.json()).then(console.log)\n  }\n\n  const [imageData, setImageData] = useState(null);\n  console.log(imageData);\n  const handleUpload = async (e) => {\n    e.preventDefault();\n\n    const formData = new FormData()\n    formData.append('image', imageData)\n\n    console.log(formData);\n\n    fetch(`api/users/${userState.user_id}`, {\n      method: 'PATCH',\n      body: formData\n    }).then(res => res.json()).then(obj => console.log(obj))\n  };\n\n  return (\n    userState.isLoggedIn ? <div id=\"settings-page-container\">\n      <Navbar page={\"settings\"}/>\n      <div id=\"settings-container\">\n        <h2>Settings</h2>\n        <input type=\"file\" accept=\"image/*\" id=\"file\" name=\"image\" onChange={(e) => setImageData(e.target.files[0])}/>\n        <button onClick={handleUpload}>Upload</button>\n        <form id=\"settings-form\" onSubmit={(e) => handleSubmit(e)}>\n          <label for=\"name\">Name</label>\n          <input type=\"text\" name=\"name\" value={formState.name} onChange={handleChange} />\n          <label for=\"username\">Username</label>\n          <input type=\"text\" name=\"username\" value={formState.username} onChange={handleChange}/>\n          <label for=\"email\">Email</label>\n          <input name=\"email\" onChange={handleChange} type=\"text\" value={formState.email}/>\n          <label for=\"age\">Age</label>\n          <input id=\"num-inp2\" type=\"number\" name=\"age\" min={0} onChange={handleChange} value={formState.age} />\n          <label for=\"password\">Password</label>\n          <input name=\"password\" onChange={handleChange} type=\"text\" value={formState.password}/>\n          <button id=\"settings-btn\" type=\"submit\">Save</button>\n        </form>\n        <button onClick={handleDeleteAcc}id=\"dlt-act\">Delete Account</button>\n      <div className=\"audio-player-container\">\n                <AudioPlayer />\n      </div>\n      </div>\n    </div> : <div id=\"notloggedIn\">\n      <div>\n        <h1>Audiophile</h1>\n      </div>\n      <div id=\"log-container\">\n        <h2>Uhh Ohh</h2>\n        <p>You are not logged in. Please Log In Or Sign Up.</p>\n        <div id=\"btn-log\">\n          <button onClick={() => navigate('/')}>Login</button>\n          <button onClick={() => navigate('/signup')}>Sign Up</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Create/CreatePage.js",["221","222","223"],[],"import React, { useState, useContext, useEffect } from 'react'\nimport './createpage.css';\nimport AudioUploadForm from '../AudioUploadForm';\nimport Navbar from '../Navbar';\nimport HomeCard from '../Home/HomeCard';\nimport CAlbums from './CAlbums';\nimport CSongs from './CSongs';\nimport CPlaylists from './CPlaylists';\nimport { UserContext } from \"../../context/user\";\nimport { useNavigate } from 'react-router-dom';\n\n/**\n * Component for showing create form for Songs, Albums, and Playlists.\n *\n * @component\n * @example\n * return (\n *   <CreatePage />\n * )\n */\n\nexport default function CreatePage() {\n\n  const navigate = useNavigate();\n\n  // initialize User Context\n  const { userState, setUserState } = useContext(UserContext);\n\n  const [pageState, setPageState] = useState(1)\n\n  const [csongs, setCSongs] = useState(false)\n  const [calbums, setCAlbums] = useState(false);\n  const [cplaylists, setCPlaylists] = useState(false);\n\n\n  useEffect(() => {\n    if (pageState === 1) {\n      setCSongs(true);\n      setCAlbums(false);\n      setCPlaylists(false);\n    }\n    if (pageState === 2) {\n      setCAlbums(true);\n      setCSongs(false)\n      setCPlaylists(false);\n    }\n    if (pageState === 3) {\n      setCPlaylists(true);\n      setCSongs(false);\n      setCAlbums(false);\n    }\n  },[pageState])\n\n  const renderPage = () => {\n    if (pageState === 1) {\n      return <CSongs />\n    } else if (pageState === 2) {\n     return <CAlbums />\n    } else if (pageState === 3) {\n      return <CPlaylists />\n    }\n  }\n\n\n  return (\n    userState.isLoggedIn ? <div id=\"create-page-container\">\n      <Navbar page={\"create\"} />\n      <div id=\"create-wrapper\">\n        <div id=\"btn-wrapper-create\">\n          <button className={csongs ? 'active' : null} onClick={() => setPageState(1)}>Songs</button>\n          <button className={calbums ? 'active' : null} onClick={() => setPageState(2)}>Albums</button>\n          <button className={cplaylists ? 'active' : null} onClick={() => setPageState(3)}>Playlist</button>\n        </div>\n        {renderPage()}\n      </div>\n    </div> : <div id=\"notloggedIn\">\n      <div>\n        <h1>Audiophile</h1>\n      </div>\n      <div id=\"log-container\">\n        <h2>Uhh Ohh</h2>\n        <p>You are not logged in. Please Log In Or Sign Up.</p>\n        <div id=\"btn-log\">\n          <button onClick={() => navigate('/')}>Login</button>\n          <button onClick={() => navigate('/signup')}>Sign Up</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Album/AlbumPage.js",["224","225","226","227"],[],"import React, { useState, useEffect, useContext} from 'react'\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './albumpage.css';\nimport SongList from '../SongList';\nimport { UserContext } from '../../context/user';\nimport Navbar from '../Navbar';\nimport AudioPlayer from '../AudioPlayer';\nimport { BsFillHeartFill } from \"react-icons/bs\";\n\n/**\n * Component for showing details of an individual album\n *\n * @component\n * @example\n * return (\n *   <AlbumPage />\n * )\n */\n\nexport default function AlbumPage() {\n  \n  let { id } = useParams();\n\n  const { userState, setUserState } = useContext(UserContext);\n\n  const navigate = useNavigate();\n  const [album, setAlbum] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [songs, setSongs] = useState([]);\n  const [userComment, setUserComment] = useState('');\n\n  useEffect(() => {\n    fetch(`api/albums/${id}`)\n    .then(res => res.json()).then((obj) => {\n      setAlbum(obj)\n      setComments(obj.comments)\n      setSongs(obj.songs)\n    });\n  },[])\n\n  const handleCommentSubmit = (e) => {\n    e.preventDefault();\n    fetch(`api/poly_comments`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        commentable_type: \"Album\",\n        commentable_id: id,\n        user_id: userState.user_id,\n        content: userComment\n      })\n    }).then(res => res.json()).then(obj => console.log(obj));\n  }\n\n  const renderComments = comments.map((comment) => {\n    console.log(comment);\n    return <div id=\"commentCard\">\n      <img src={comment.pfp_url}/>\n      <div>\n        <h4>{comment.username}</h4>\n        <p>{comment.content}</p>\n      </div>\n    </div>\n  })\n\n  const handleLike = () => {\n    fetch(`api/poly_likes`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        likeable_type: \"Album\",\n        likeable_id: album.id,\n        user_id: userState.user_id\n      })\n    }).then(res => res.json()).then(console.log)\n  }\n\n  return (\n  userState.isLoggedIn ?  <div id=\"album-page-container\">\n      <Navbar />\n      <div id=\"album-page-wrapper\">\n          <div id=\"home-card-container\">\n\n            <div id=\"card-details\">\n              <h6>@{album.artist}</h6>\n              <h6>{album.created_at}</h6>\n            </div>\n\n            <div id=\"home-card-wrapper\">\n              <img src={album.image_url} onClick={() => navigate(`/album/${album.id}`)}/>\n              \n              <div id=\"card-info-display\">\n                  <div id=\"info-top\">\n                    <div id=\"artist-info\">\n                      <h3 onClick={() => navigate(`/album/${album.id}`)}>{album.name}</h3>\n                      <h5 onClick={() => navigate(`/profile/${album.artist}`)}>{album.artist}</h5>\n                    </div>\n                    <div id=\"card-social-btns\">\n                      <button onClick={handleLike}><BsFillHeartFill/></button>\n                      <button onClick={() => navigate(`/album/${album.id}`)}>Comments</button>\n                      <button>Likes: {album.likes}</button>\n                    </div>\n                  </div>\n              </div>\n\n          </div>\n        </div>\n        <div id=\"content_wrapper\">\n\n        <div id=\"left-container\">\n          <SongList songs={songs} full={true}/>\n        </div>\n\n        <div id=\"right-container\">\n\n          <div id=\"add-comment\">\n            <h4>Add A Comment</h4>\n            <input type=\"text\" onChange={(e) => setUserComment(e.target.value)}/>\n            <button onClick={handleCommentSubmit}>Submit</button>\n          </div>\n\n            <p>Comments</p>\n          <div id=\"comment-container\">\n              {renderComments}\n          </div>\n\n        </div>\n\n        </div>\n        \n          <div className=\"audio-player-container\">\n            <AudioPlayer />\n          </div>\n      </div>\n    </div> : <div id=\"notloggedIn\">\n      <div>\n        <h1>Audiophile</h1>\n      </div>\n      <div id=\"log-container\">\n        <h2>Uhh Ohh</h2>\n        <p>You are not logged in. Please Log In Or Sign Up.</p>\n        <div id=\"btn-log\">\n          <button onClick={() => navigate('/')}>Login</button>\n          <button onClick={() => navigate('/signup')}>Sign Up</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Playlist/PlaylistPage.js",["228","229","230","231"],[],"import React, {useState, useEffect, useContext} from 'react'\nimport { UserContext } from '../../context/user';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport SongList from '../SongList';\nimport './playlistpage.css'\nimport Navbar from '../Navbar';\nimport AudioPlayer from '../AudioPlayer';\nimport { BsFillHeartFill } from \"react-icons/bs\";\n\n/**\n * Component for showing details of an individual playlist\n *\n * @component\n * @example\n * return (\n *   <PlaylistPage />\n * )\n */\n\nexport default function PlaylistPage() {\n  let {id} = useParams();\n\n  const navigate = useNavigate();\n\n  const [playlist, setPlaylist] = useState([]);\n\n  const [comments, setComments] = useState([]);\n\n  const [songs, setSongs] = useState([]);\n\n  const [userComment, setUserComment] = useState([]);\n\n\n  const { userState, setUserState } = useContext(UserContext);\n\n  useEffect(() => {\n    fetch(`api/playlists/${id}`)\n    .then(res => res.json()).then((obj) => {\n      setPlaylist(obj)\n      setComments(obj.comments)\n      setSongs(obj.songs)\n    });\n  },[])\n\n  const handleLike = () => {\n    fetch(`api/poly_likes`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        likeable_type: \"Playlist\",\n        likeable_id: playlist.id,\n        user_id: userState.user_id\n      })\n    }).then(res => res.json()).then(console.log)\n  }\n\n  const handleCommentSubmit = (e) => {\n    e.preventDefault();\n    fetch(`api/poly_comments`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        commentable_type: \"Playlist\",\n        commentable_id: id,\n        user_id: userState.user_id,\n        content: userComment\n      })\n    }).then(res => res.json()).then(obj => console.log(obj));\n  }\n\n  const renderComments = comments.map((comment) => {\n    return <div id=\"commentCard\">\n      <img src={comment.pfp_url}/>\n      <div>\n        <h4>{comment.username}</h4>\n        <p>{comment.content}</p>\n      </div>\n    </div>\n  })\n\n  return (\n    userState.isLoggedIn ? <div id=\"album-page-container\">\n      <Navbar />\n        <div id=\"album-page-wrapper\">\n\n          <div id=\"home-card-container\">\n          <div id=\"card-details\">\n            <h6>@{playlist.artist}</h6>\n            <h6>{playlist.created_at}</h6>\n          </div>\n          <div id=\"home-card-wrapper\">\n            <img src={playlist.image_url} onClick={() => navigate(`/playlist/${playlist.id}`)}/>\n            <div id=\"card-info-display\">\n                <div id=\"info-top\">\n                  <div id=\"artist-info\">\n                    <h3 onClick={() => navigate(`/playlist/${playlist.id}`)}>{playlist.name}</h3>\n                    <h5 onClick={() => navigate(`/profile/${playlist.artist}`)}>{playlist.artist}</h5>\n                  </div>\n                  <div id=\"card-social-btns\">\n                    <button onClick={handleLike}><BsFillHeartFill/></button>\n                    <button onClick={() => navigate(`/playlist/${playlist.id}`)}>Comments</button>\n                    <button>Likes: {playlist.likes}</button>\n                  </div>\n                </div>\n            </div>\n          </div>\n        </div>\n\n        <div id=\"content_wrapper\">\n\n        <div id=\"left-container\">\n          <SongList songs={songs} full={true}/>\n        </div>\n        <div id=\"right-container\">\n          <div id=\"add-comment\">\n                <h4>Add A Comment</h4>\n                <input type=\"text\" onChange={(e) => setUserComment(e.target.value)}/>\n                <button onClick={handleCommentSubmit}>Submit</button>\n              </div>\n            <p>Comments</p>\n          <div id=\"comment-container\">\n            {renderComments}\n          </div>\n        </div>\n        </div>\n\n        <div className=\"audio-player-container\">\n            <AudioPlayer />\n        </div>\n        </div>\n    </div> : <div id=\"notloggedIn\">\n      <div>\n        <h1>Audiophile</h1>\n      </div>\n      <div id=\"log-container\">\n        <h2>Uhh Ohh</h2>\n        <p>You are not logged in. Please Log In Or Sign Up.</p>\n        <div id=\"btn-log\">\n          <button onClick={() => navigate('/')}>Login</button>\n          <button onClick={() => navigate('/signup')}>Sign Up</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Song/Songpage.js",[],[],"/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Song/SongPage.js",["232","233","234"],[],"import React, {useState, useEffect, useContext} from 'react'\nimport './songpage.css';\nimport '../Home/homecard.css';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport SongCard from '../SongCard';\nimport AudioPlayer from '../AudioPlayer';\nimport { UserContext } from '../../context/user';\nimport Navbar from '../Navbar';\n\n/**\n * Component for Displaying a Single Song and its Comments\n *\n * @component\n * @example\n * return (\n *   <SongPage />\n * )\n */\n\nexport default function SongPage() {\n  let {id} = useParams();\n\n  const { userState, setUserState } = useContext(UserContext);\n\n  const navigate = useNavigate();\n\n  const [song, setSong] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [userComment, setUserComment] = useState('');\n\n  useEffect(() => {\n    fetch(`api/songs/${id}`)\n    .then(res => res.json()).then((obj) => {\n      setSong(obj)\n      setComments(obj.comments)\n    });\n  },[]);\n\n  const handleCommentSubmit = (e) => {\n    e.preventDefault();\n    fetch(`api/poly_comments`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        commentable_type: \"Song\",\n        commentable_id: id,\n        user_id: userState.user_id,\n        content: userComment\n      })\n    }).then(res => res.json()).then(obj => console.log(obj));\n  }\n\n  const renderComments = comments.map((comment) => {\n    console.log(comment);\n    return <div id=\"commentCard\">\n      <img onClick={() => navigate(`/profile/${comment.username}`)} src={comment.pfp_url}/>\n      <div>\n        <h4 onClick={() => navigate(`/profile/${comment.username}`)}>{comment.username}</h4>\n        <p>{comment.content}</p>\n      </div>\n    </div>\n  })\n  return (\n    userState.isLoggedIn ? <div id=\"song-page-container\">\n      <Navbar />\n      <div id=\"song-page-wrapper\">\n        <SongCard song={song}/>\n            <h4>Add A Comment</h4>\n          <div id=\"add-comment\">\n            <input type=\"text\" onChange={(e) => setUserComment(e.target.value)}/>\n            <button onClick={handleCommentSubmit}>Submit</button>\n          </div>\n          <h4>Comments</h4>\n        <div id=\"comment-container\">\n          {renderComments}\n        </div>\n        <div className=\"audio-player-container\">\n          <AudioPlayer />\n        </div>\n      </div>\n    </div> : <div id=\"notloggedIn\">\n      <div>\n        <h1>Audiophile</h1>\n      </div>\n      <div id=\"log-container\">\n        <h2>Uhh Ohh</h2>\n        <p>You are not logged in. Please Log In Or Sign Up.</p>\n        <div id=\"btn-log\">\n          <button onClick={() => navigate('/')}>Login</button>\n          <button onClick={() => navigate('/signup')}>Sign Up</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Profile/Profile.js",["235","236","237"],[],"import React, { useEffect, useState, useContext } from 'react'\nimport './profile.css';\nimport Navbar from '../Navbar';\nimport PSongs from './PSongs';\nimport { useParams } from 'react-router-dom';\nimport AudioPlayer from '../AudioPlayer';\nimport PAlbums from './PAlbums';\nimport PPlaylists from './PPlaylists';\nimport { UserContext } from '../../context/user';\nimport { useNavigate } from 'react-router-dom';\n\n/**\n * Component for showing details of the users profile or other users profiles.\n *\n * @component\n * @example\n * return (\n *   <Profile />\n * )\n */\n\nexport default function Profile() {\n  let { username } = useParams();\n  const [user, setUser] = useState([]);\n  const [songs, setSongs] = useState([]);\n  const [albums, setAlbums] = useState([]);\n  const [playlists, setPlaylists] = useState([]);\n  const [image, setImage] = useState(null);\n  const [pageState, setPageState] = useState(1);\n\n  const { userState, setUserState } = useContext(UserContext);\n  \n  const navigate = useNavigate();\n\n\n  useEffect(() => {\n    fetch(`api/users/${username}`)\n    .then(res => res.json()).then((obj)=> {\n      setUser(obj)\n      setSongs(obj.songs)\n      setPlaylists(obj.playlists)\n      setAlbums(obj.albums)\n      setImage(obj.image_url)\n      console.log(obj)\n    }\n      );  \n  }, [])\n\n  const [psongs, setPSongs] = useState(false);\n  const [palbums, setPAlbums] = useState(false);\n  const [pplaylist, setPPlaylists] = useState(false);\n\n  useEffect(() => {\n    if (pageState === 1) {\n      setPSongs(true);\n      setPAlbums(false);\n      setPPlaylists(false);\n    } else if (pageState === 2) {\n      setPSongs(false);\n      setPAlbums(true);\n      setPPlaylists(false);\n    } else if (pageState === 3) {\n      setPSongs(false);\n      setPAlbums(false);\n      setPPlaylists(true);\n    }\n  }, [pageState])\n\n  const renderPage = () => {\n    if (pageState === 1) {\n      return <PSongs songs={songs}/>\n    } else if (pageState === 2) {\n     return <PAlbums albums={albums}/>\n    } else if (pageState === 3) {\n      return <PPlaylists playlists={playlists}/>\n    }\n  }\n\n  const checkIfPfpAvailable = () => {\n    if (image !== null) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n\n  return (\n    userState.isLoggedIn ? <div id=\"profile-page-container\">\n        <Navbar page={\"profile\"}/>\n        <div id=\"profile-wrapper\">\n            <div id=\"profile-hdr\">\n              <img id=\"pfp-profile\" src={checkIfPfpAvailable ? image : \"https://place-hold.it/100\"} />\n              <div id=\"name-wrapper\">\n                <h2>{user.name}</h2>\n                <h4>@{user.username}</h4>\n              </div>\n            </div>\n            <div id=\"btn-cluster-profile\">\n                <button className={psongs ? \"active\" : null} onClick={() => setPageState(1)}>Songs</button>\n                <button className={palbums ? \"active\" : null} onClick={() => setPageState(2)}>Albums</button>\n                <button className={pplaylist ? \"active\" : null} onClick={() => setPageState(3)}>Playlist</button>\n            </div>\n            <div id=\"profile-content-container\">\n                {renderPage()}\n              <div className=\"audio-player-container\">\n                <AudioPlayer />\n              </div>\n            </div>\n        </div>\n    </div> : <div id=\"notloggedIn\">\n      <div>\n        <h1>Audiophile</h1>\n      </div>\n      <div id=\"log-container\">\n        <h2>Uhh Ohh</h2>\n        <p>You are not logged in. Please Log In Or Sign Up.</p>\n        <div id=\"btn-log\">\n          <button onClick={() => navigate('/')}>Login</button>\n          <button onClick={() => navigate('/signup')}>Sign Up</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/AudioUploadForm.js",["238","239","240","241","242"],[],"import React, { useState, useContext, useEffect} from \"react\";\nimport AudioPlayer from \"./AudioPlayer\";\nimport { UserContext } from \"../context/user\";\n\n/**\n * Component for allowing a user to upload an audio file/song.\n *\n * @component\n * @example\n * return (\n *   <AudioUploadForm />\n * )\n */\n\nfunction AudioUploadForm() {\n\n    // initialize User Context\n    const { userState, setUserState } = useContext(UserContext);\n\n    const [name, setName] = useState(\"\");\n    const [album, setAlbum] = useState(null);\n    const [audioData, setAudioData] = useState(null)\n    const [imageData, setImageData] = useState(null)\n    const [songUrl, setSongUrl] = useState('')\n    const [albumList, setAlbumList] = useState([])\n\n    const handleSubmit = async (e) => {\n      e.preventDefault();\n\n      const formData = new FormData()\n      formData.append('user_id', userState.user_id)\n      formData.append('name', name)\n      formData.append('audio', audioData)\n      formData.append('image', imageData)\n      formData.append('album_id', album)\n\n      fetch('api/songs', {\n        method: 'POST',\n        body: formData\n      }).then(res => res.json()).then(obj => console.log(obj))\n    };\n\n    useEffect(()=> {\n      fetch(`api/users/${userState.user_id}/albums`)\n      .then(res =>res.json()).then(obj => setAlbumList(obj))\n    },[])\n\n    const renderAlbumList = albumList.map((album) => {\n            return <option value={album.id}>{album.name}</option>\n    })\n\n    return (\n      <>\n      <form onSubmit={handleSubmit} id=\"audio_upload\">\n        <div id=\"upload_container\">\n          <label for=\"name\">Song Name</label>\n          <input onChange={(e)=> setName(e.target.value)} type=\"text\" id=\"name\"/>\n          <select onChange={(e) => setAlbum(e.target.value)}>\n            <option value={\"\"}>Choose Album</option>\n            {renderAlbumList}\n          </select>\n          <label htmlFor=\"audio\" class=\"file\">Upload Audio File:\n          <input type=\"file\" accept=\"audio/*\" id=\"file\" name=\"audio\" onChange={(e) => setAudioData(e.target.files[0])} />\n          </label>\n          <label htmlFor=\"image\" class=\"file\">Upload Cover Image:\n          <input type=\"file\" accept=\"image/*\" id=\"file\" name=\"image\" onChange={(e) => setImageData(e.target.files[0])} />\n          </label>\n        </div>\n        <button type=\"submit\">Submit</button>\n      </form>\n      </>\n      \n    );\n}\n\nexport default AudioUploadForm;\n","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Profile/PSongs.js",["243","244","245"],[],"import React, { useEffect, useState } from 'react'\nimport SongList from '../SongList'\nimport './profile.css'\nimport HomeCard from '../Home/HomeCard';\n\n/**\n * Component for showing details of the users created songs.\n *\n * @component\n * @example\n * return (\n *   <PSongs songs={array of songs objects} />\n * )\n */\n\nexport default function PSongs(songs) {\n\n    const renderCards = songs.songs.map( (obj) => {\n      console.log(obj)\n      return <HomeCard obj={obj} isSong={true}/>\n    })\n\n  return (\n    <div id=\"psong-container\">\n        {renderCards}\n    </div>\n  )\n}\n","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/SongItem.js",["246"],[],"import React, { useState, useContext, useEffect } from 'react'\nimport { BsFillPlayFill, BsFillPauseFill, BsFillHeartFill, BsPlusSquare} from \"react-icons/bs\";\nimport './songlist.css';\nimport { UserContext } from \"../context/user\";\nimport { useNavigate } from 'react-router-dom';\n\n/**\n * Component for showing details of an individual song in a song list.\n *\n * @component\n * @example\n * return (\n *   <SongItem  song={song object} i={playlist/album song index}/>\n * )\n */\n\nexport default function SongItem({ song, i}) {\n\n    // initialize User Context\n    const { userState, setUserState } = useContext(UserContext);\n\n    //allow navigation\n    const navigate = useNavigate();\n\n    const [showPlaylists, setShowPlaylists] = useState(false);\n\n    const [playlists, setPlaylists] = useState([]);\n\n    const [playlistId, setPlaylistId] = useState(null);\n    const handleClick = () => {\n       setUserState({...userState, queue: [...userState.queue, song] })\n    }\n\n    const handleLike = () => {\n      fetch(`api/poly_likes`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          likeable_type: \"Song\",\n          likeable_id: song.id,\n          user_id: userState.user_id\n        })\n      }).then(res => res.json()).then(console.log)\n    }\n\n    useEffect(() => {\n      fetch(`api/users/${userState.user_id}/playlists`)\n      .then(res => res.json()).then((obj) => setPlaylists(obj))\n    },[userState.user_id])\n\n    const handleAddToPlayList = () => {\n      setShowPlaylists(true);\n    }\n\n    const submitAddToPlaylist = () => {\n      fetch(`api/playlist_songs`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          playlist_id: playlistId,\n          song_id: song.id\n        })\n      }).then(res => res.json()).then(setShowPlaylists(false))\n    }\n\n\n\n    const renderOptions = playlists.map((playlist) => {\n      return <option value={playlist.id}>{playlist.name}</option>\n    })\n\n    const renderPlaylists = () => {\n      return showPlaylists ? <div id=\"playlist-modal\">\n        <div>\n          <div id=\"x\" onClick={() => setShowPlaylists(false)}>\n            x\n          </div>\n        <h2> Song: {song.name}</h2>\n        <select onChange={(e) => setPlaylistId(e.target.value)}>\n          <option>Select A Playlist</option>\n          {renderOptions}\n        </select>\n        <button onClick={submitAddToPlaylist}>Add To Playlist</button>\n      </div>\n      </div> : null\n    }\n\n  return (\n    <>\n        {renderPlaylists()}\n        <div id=\"song-wrapper\">\n            <h4 id=\"song-index\">{i}</h4>\n            <h4 onClick={() => navigate(`/song/${song.id}`)} id=\"song-list-title\">{song.name}</h4>\n            <div id=\"song-list-like\" onClick={handleLike}>\n              <p onClick={handleLike}><BsFillHeartFill/></p>\n            </div>\n            <div id=\"song-list-add\">\n              <p onClick={handleAddToPlayList}><BsPlusSquare/></p>\n            </div>\n            <div id=\"song-list-play\" onClick={handleClick}>\n                <BsFillPlayFill size={25}/>\n            </div>\n        </div>\n        <hr/>\n    </>\n  )\n}\n","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Profile/PAlbums.js",["247","248"],[],"import React, { useEffect, useState } from 'react'\nimport './profile.css'\nimport AlbumItem from '../AlbumItem';\n\n/**\n * Component for showing details of the users created albums\n *\n * @component\n * @example\n * return (\n *   <PAlbums albums={array of album objects} />\n * )\n */\n\nexport default function PAlbums({albums}) {\n\n    const renderAlbums = albums.map(album => {\n        return <AlbumItem album={album}/>\n    })\n\n  return (\n    <div id=\"palbum-container\">\n        {renderAlbums}\n    </div>\n  )\n}\n","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/AlbumItem.js",["249","250","251"],[],"import React, { useState, useEffect } from 'react';\nimport SongList from './SongList';\nimport \"./albumitem.css\";\nimport { useNavigate } from 'react-router-dom';\n\n/**\n * Component for showing details of an album item\n *\n * @component\n * @example\n * return (\n *   <AlbumItem album={album object} />\n * )\n */\n\nexport default function AlbumItem(album) {\n  const [songs, setSongs] = useState([]);\n\n  const navigate = useNavigate();\n\n\n  useEffect(() => {\n    if (album.album.songs !== undefined && album.album.songs.length - 1 >3) {\n      setSongs([album.album.songs[0], album.album.songs[1], album.album.songs[2]]);\n    } else if (album.album.songs !== undefined) {\n      setSongs([album.album.songs[0]])\n    }\n    else {\n      setSongs([album.album.songs])\n    }\n  }, []);\n\n  const checkImageUrl = () => {\n    if (album.album.image_url != null) {\n      return true\n    } else {\n      return false;\n    }\n  }\n\n  const placeholderURL = \"https://place-hold.it/200\";\n\n  return (\n    <div id=\"home-card-container\">\n      <div id=\"card-details\">\n        <h6>@{album.album.artist}</h6>\n        <h6>{album.album.created_at}</h6>\n      </div>\n      <div id=\"home-card-wrapper\">\n        <img src={checkImageUrl ? album.album.image_url : placeholderURL} onClick={() => navigate(`/album/${album.album.id}`)}/>\n        <div id=\"card-info-display\">\n            <div id=\"info-top\">\n              <div id=\"artist-info\">\n                <h3 onClick={() => navigate(`/album/${album.album.id}`)}>{album.album.name}</h3>\n                <h5 onClick={() => navigate(`/profile/${album.album.artist}`)}>{album.album.artist}</h5>\n              </div>\n              <div id=\"card-social-btns\">\n                <button onClick={() => navigate(`/album/${album.album.id}`)}>Comments</button>\n                <button>Likes: {album.album.likes}</button>\n              </div>\n            </div>\n            <div id=\"card-song-container\">\n              <h5>{\"Top 3\"}</h5>\n              <SongList songs={album.album.songs} card={true}/>\n            </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Profile/PPlaylists.js",["252","253"],[],"import React, { useState, useEffect } from 'react'\nimport PlaylistItem from '../PlaylistItem';\n\n/**\n * Component for showing details of the users playlists\n *\n * @component\n * @example\n * return (\n *   <PPlaylists playlists={array of playlist objects} />\n * )\n */\n\nexport default function PPlaylists({playlists}) {\n\n    const renderPlaylists = playlists.map((playlist) => {\n      return <PlaylistItem playlist={playlist} />\n    })\n  return (\n    <div id=\"pplaylist-container\">\n      {renderPlaylists}\n    </div>\n  )\n}\n","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Create/CAlbums.js",["254","255","256","257","258","259","260"],[],"import React, { useState, useContext } from 'react'\nimport \"./createpage.css\";\nimport GroupCard from \"./GroupCard\";\nimport { UserContext } from \"../../context/user\";\nimport AudioUploadForm from '../AudioUploadForm';\nimport SongList from \"../SongList\";\n\n/**\n * Component for showing the album create form.\n *\n * @component\n * @example\n * return (\n *   <CAlbums />\n * )\n */\n\nexport default function CAlbums() {\n        // initialize User Context\n        const { userState, setUserState } = useContext(UserContext);\n    \n        const [pageState, setPageState] = useState(1);\n        const [albumName, setAlbumName] = useState(null);\n        const [imageData, setImageData] = useState(null);\n\n        const [albumId, setAlbumId] = useState(null);\n\n        const uploadAlbum = async (e) => {\n          e.preventDefault();\n    \n          const formData = new FormData()\n          formData.append('user_id', userState.user_id)\n          formData.append(\"name\", albumName)\n          formData.append(\"image\", imageData)\n    \n          fetch('api/albums', {\n            method: 'POST',\n            body: formData\n          }).then(res => res.json()).then(obj => console.log(obj))\n        };\n\n  return (\n    <div id=\"CSongs-container\">\n       <div id=\"Songcard-wrapper\">\n            <GroupCard name={albumName} image=\"https://place-hold.it/200\" songs={[]}/>\n       </div>\n       <div id=\"upload_container\">\n            <label for=\"albumname\">Album Name</label>\n            <input type=\"text\" name=\"albumname\" onChange={(e) => setAlbumName(e.target.value)} />\n            <label for=\"image\" className=\"file\">Album Image\n            <input type=\"file\" name=\"image\" onChange={(e) => setImageData(e.target.files[0])}/>\n            </label> \n               <button id=\"xtra-btn\" onClick={uploadAlbum}>Save Album</button>\n       </div>\n    </div>\n  )\n}\n","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Create/CSongs.js",["261","262"],[],"import React, { useState, useContext } from 'react'\nimport SongCard from './SongCard';\nimport \"./createpage.css\";\nimport { UserContext } from \"../../context/user\";\nimport AudioUploadForm from '../AudioUploadForm';\n\n/**\n * Component for showing Create Songs Form.\n *\n * @component\n * @example\n * return (\n *   <CSongs />\n * )\n */\n\nexport default function CSongs() {\n\n    // initialize User Context\n    const { userState, setUserState } = useContext(UserContext);\n\n  return (\n    <div id=\"CSongs-container\">\n        <div id=\"Songcard-wrapper\">\n            <SongCard artist={userState.username} />    \n        </div>\n        <div id=\"create-form-container\">\n            <AudioUploadForm />\n        </div>\n    </div>\n  )\n}\n","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Create/CPlaylists.js",["263","264","265","266","267","268","269"],[],"import React, { useState, useContext } from 'react'\nimport \"./createpage.css\";\nimport GroupCard from \"./GroupCard\";\nimport { UserContext } from \"../../context/user\";\nimport AudioUploadForm from '../AudioUploadForm';\nimport SongList from \"../SongList\";\n\n/**\n * Component for showing the Create Playlist form.\n *\n * @component\n * @example\n * return (\n *   <CPlaylists />\n * )\n */\n\nexport default function CPlaylists() {\n        // initialize User Context\n        const { userState, setUserState } = useContext(UserContext);\n    \n        const [pageState, setPageState] = useState(1);\n        const [playlistName, setPlaylistName] = useState(null);\n        const [imageData, setImageData] = useState(null);\n\n        const [playlistId, setPlaylistId] = useState(null);\n\n        const uploadPlaylist = async (e) => {\n          e.preventDefault();\n    \n          const formData = new FormData()\n          formData.append('user_id', userState.user_id)\n          formData.append(\"name\", playlistName)\n          formData.append(\"image\", imageData)\n    \n          fetch('api/playlists', {\n            method: 'POST',\n            body: formData\n          }).then(res => res.json()).then(obj => console.log(obj))\n        };\n\n  return (\n    <div id=\"CSongs-container\">\n       <div id=\"Songcard-wrapper\">\n            <GroupCard name=\"Playlist Name\" image=\"https://place-hold.it/200\" songs={[]}/>\n       </div>\n       <div id=\"upload_container\">\n            <label for=\"playlistname\">Playlist Name</label>\n            <input type=\"text\" className=\"file\" name=\"playlistname\" onChange={(e) => setPlaylistName(e.target.value)} />\n            <label className=\"file\" for=\"image\">Playlist Image\n            <input type=\"file\" name=\"image\" onChange={(e) => setImageData(e.target.files[0])}/>\n            </label>\n               <button id=\"xtra-btn\" onClick={uploadPlaylist}>Save Playlist</button>\n            <div>\n            </div>\n       </div>\n    </div>\n  )\n}\n","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Create/SongCard.js",["270","271"],[],"import React from 'react'\nimport '../Home/homecard.css';\nimport SongList from '../SongList';\n\n/**\n * Component for showing details of a song\n *\n * @component\n * @example\n * return (\n *   <SongCard props={song object} />\n * )\n */\n\nexport default function SongCard(props) {\n  return (\n    <div id=\"home-card-container\">\n      <div id=\"card-details\">\n        <h6>@{props.artist}</h6>\n        <h6>Creating</h6>\n      </div>\n      <div id=\"home-card-wrapper\">\n        <img src=\"https://place-hold.it/200\"/>\n        <div id=\"card-info-display\">\n            <div id=\"info-top\">\n              <div id=\"artist-info\">\n                <h3>Song Name</h3>\n                <h5>Artist Username</h5>\n              </div>\n              <div id=\"card-social-btns\">\n                <button>Comments</button>\n                <button>Likes</button>\n              </div>\n            </div>\n            <div id=\"card-song-container\">\n              <h5>Single</h5>\n              {/* <SongList songs={songs}/> */}\n            </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/Create/GroupCard.js",["272","273","274"],[],"import React, { useState, useContext } from 'react'\nimport '../Home/homecard.css';\nimport SongList from '../SongList';\nimport { UserContext } from \"../../context/user\";\n\n/**\n * Component for displaying create pages Album or playlist cards.\n *\n * @component\n * @example\n * return (\n *   <GroupCard name={album||playlist} songs={array of song objects} image={album||playlist imageUrl}/>\n * )\n */\n\nexport default function GroupCard({name, songs, image}) {\n\n        // initialize User Context\n        const { userState, setUserState } = useContext(UserContext);\n  return (\n    <div id=\"home-card-container\">\n      <div id=\"card-details\">\n        <h6>@{userState.username}</h6>\n        <h6>Creating</h6>\n      </div>\n      <div id=\"home-card-wrapper\">\n        <img src={image}/>\n        <div id=\"card-info-display\">\n            <div id=\"info-top\">\n              <div id=\"artist-info\">\n                <h3>{name}</h3>\n                <h5>{userState.username}</h5>\n              </div>\n              <div id=\"card-social-btns\">\n                <button>Comments</button>\n                <button>Likes</button>\n              </div>\n            </div>\n            <div id=\"card-song-container\">\n              <h5>Songs</h5>\n              <SongList songs={songs}/>\n            </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/PlaylistItem.js",["275","276","277"],[],"import React, { useState, useEffect } from 'react'\nimport SongList from './SongList';\nimport { useNavigate } from 'react-router-dom';\n\n/**\n * Component for showing details a playlist item\n *\n * @component\n * @example\n * return (\n *   <PlaylistItem playlist={array of playlist objects} />\n * )\n */\n\nexport default function PlaylistItem(playlist) {\n    const [songs, setSongs] = useState([]);\n\n    //allow navigation\n    const navigate = useNavigate();\n\n    useEffect(() => {\n      if (playlist.playlist.songs !== undefined && playlist.playlist.songs.length - 1 >=3) {\n        setSongs([playlist.playlist.songs[0], playlist.playlist.songs[1], playlist.playlist.songs[2]]);\n      } else if (playlist.playlist.songs !== undefined) {\n        setSongs([playlist.playlist.songs[0]])\n      }\n      else {\n        setSongs([playlist.playlist.songs])\n      }\n    }, []);\n  \n    const checkImageUrl = () => {\n      if (playlist.playlist.image_url != null) {\n        console.log(\"true\");\n        return true\n      } else {\n        return false;\n      }\n    }\n  \n    const placeholderURL = \"https://place-hold.it/200\";\n  \n    return (\n      <div id=\"home-card-container\">\n        <div id=\"card-details\">\n          <h6>@{playlist.playlist.artist}</h6>\n          <h6>{playlist.playlist.created_at}</h6>\n        </div>\n        <div id=\"home-card-wrapper\">\n          <img src={checkImageUrl ? playlist.playlist.image_url : placeholderURL} onClick={() => navigate(`/playlist/${playlist.playlist.id}`)}/>\n          <div id=\"card-info-display\">\n              <div id=\"info-top\">\n                <div id=\"artist-info\">\n                  <h3 onClick={() => navigate(`/playlist/${playlist.playlist.id}`)}>{playlist.playlist.name}</h3>\n                  <h5 onClick={() => navigate(`/profile/${playlist.playlist.artist}`)}>{playlist.playlist.artist}</h5>\n                </div>\n                <div id=\"card-social-btns\">\n                  <button>Comments</button>\n                  <button>Likes</button>\n                </div>\n              </div>\n              <div id=\"card-song-container\">\n                <h5>{\"Top 3\"}</h5>\n                <SongList songs={playlist.playlist.songs} card={true}/>\n              </div>\n          </div>\n        </div>\n      </div>\n    )\n}\n","/Users/dylanrhinehart/Development/code/Projects/Audiophile/client/audiophile/src/components/SongCard.js",["278"],[],"import React from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport './Home/homecard.css';\nimport SongList from './SongList';\n\n/**\n * Component for showing details of an individual song\n *\n * @component\n * @example\n * return (\n *   <SongCard song={song object} />\n * )\n */\n\nexport default function SongCard({song}) {\n    const navigate = useNavigate();\n  return (\n    <div id=\"home-card-container\">\n    <div id=\"card-details\">\n      <h6>@{song.artist}</h6>\n      <h6>{song.created_at}</h6>\n    </div>\n    <div id=\"home-card-wrapper\">\n      <img src={song.image_url} onClick={() => navigate(`/album/${song.id}`)}/>\n      <div id=\"card-info-display\">\n          <div id=\"info-top\">\n            <div id=\"artist-info\">\n              <h3 onClick={() => navigate(`/album/${song.id}`)}>{song.name}</h3>\n              <h5 onClick={() => navigate(`/profile/${song.artist}`)}>{song.artist}</h5>\n            </div>\n            <div id=\"card-social-btns\">\n              <button>Comments</button>\n              <button>Likes: {song.likes}</button>\n            </div>\n          </div>\n          <div id=\"card-song-container\">\n            <h5>{\"Single\"}</h5>\n            <SongList songs={[song]} card={true}/>\n          </div>\n      </div>\n    </div>\n  </div>\n  )\n}\n",{"ruleId":"279","severity":1,"message":"280","line":1,"column":27,"nodeType":"281","messageId":"282","endLine":1,"endColumn":36},{"ruleId":"279","severity":1,"message":"283","line":24,"column":13,"nodeType":"281","messageId":"282","endLine":24,"endColumn":22},{"ruleId":"279","severity":1,"message":"280","line":1,"column":27,"nodeType":"281","messageId":"282","endLine":1,"endColumn":36},{"ruleId":"279","severity":1,"message":"283","line":21,"column":11,"nodeType":"281","messageId":"282","endLine":21,"endColumn":20},{"ruleId":"279","severity":1,"message":"284","line":5,"column":8,"nodeType":"281","messageId":"282","endLine":5,"endColumn":16},{"ruleId":"279","severity":1,"message":"285","line":6,"column":8,"nodeType":"281","messageId":"282","endLine":6,"endColumn":17},{"ruleId":"279","severity":1,"message":"286","line":25,"column":22,"nodeType":"281","messageId":"282","endLine":25,"endColumn":34},{"ruleId":"287","severity":1,"message":"288","line":41,"column":9,"nodeType":"289","endLine":41,"endColumn":37},{"ruleId":"287","severity":1,"message":"288","line":47,"column":7,"nodeType":"289","endLine":47,"endColumn":36},{"ruleId":"287","severity":1,"message":"288","line":54,"column":7,"nodeType":"289","endLine":54,"endColumn":39},{"ruleId":"279","severity":1,"message":"286","line":19,"column":22,"nodeType":"281","messageId":"282","endLine":19,"endColumn":34},{"ruleId":"279","severity":1,"message":"290","line":58,"column":10,"nodeType":"281","messageId":"282","endLine":58,"endColumn":17},{"ruleId":"279","severity":1,"message":"291","line":58,"column":19,"nodeType":"281","messageId":"282","endLine":58,"endColumn":29},{"ruleId":"292","severity":1,"message":"293","line":85,"column":6,"nodeType":"294","endLine":85,"endColumn":24,"suggestions":"295"},{"ruleId":"287","severity":1,"message":"288","line":139,"column":9,"nodeType":"289","endLine":139,"endColumn":54},{"ruleId":"292","severity":1,"message":"296","line":58,"column":5,"nodeType":"281","endLine":58,"endColumn":14,"suggestions":"297"},{"ruleId":"292","severity":1,"message":"298","line":34,"column":6,"nodeType":"294","endLine":34,"endColumn":8,"suggestions":"299"},{"ruleId":"287","severity":1,"message":"288","line":55,"column":9,"nodeType":"289","endLine":55,"endColumn":68},{"ruleId":"292","severity":1,"message":"300","line":40,"column":3,"nodeType":"294","endLine":40,"endColumn":15,"suggestions":"301"},{"ruleId":"287","severity":1,"message":"288","line":45,"column":6,"nodeType":"289","endLine":45,"endColumn":22},{"ruleId":"287","severity":1,"message":"288","line":53,"column":5,"nodeType":"289","endLine":53,"endColumn":32},{"ruleId":"287","severity":1,"message":"288","line":61,"column":5,"nodeType":"289","endLine":61,"endColumn":33},{"ruleId":"287","severity":1,"message":"288","line":69,"column":5,"nodeType":"289","endLine":69,"endColumn":36},{"ruleId":"279","severity":1,"message":"286","line":24,"column":22,"nodeType":"281","messageId":"282","endLine":24,"endColumn":34},{"ruleId":"292","severity":1,"message":"302","line":29,"column":5,"nodeType":"294","endLine":29,"endColumn":7,"suggestions":"303"},{"ruleId":"279","severity":1,"message":"280","line":1,"column":27,"nodeType":"281","messageId":"282","endLine":1,"endColumn":36},{"ruleId":"279","severity":1,"message":"304","line":3,"column":8,"nodeType":"281","messageId":"282","endLine":3,"endColumn":23},{"ruleId":"279","severity":1,"message":"305","line":5,"column":8,"nodeType":"281","messageId":"282","endLine":5,"endColumn":16},{"ruleId":"279","severity":1,"message":"286","line":27,"column":22,"nodeType":"281","messageId":"282","endLine":27,"endColumn":34},{"ruleId":"279","severity":1,"message":"286","line":24,"column":22,"nodeType":"281","messageId":"282","endLine":24,"endColumn":34},{"ruleId":"292","severity":1,"message":"306","line":39,"column":5,"nodeType":"294","endLine":39,"endColumn":7,"suggestions":"307"},{"ruleId":"287","severity":1,"message":"288","line":58,"column":7,"nodeType":"289","endLine":58,"endColumn":35},{"ruleId":"287","severity":1,"message":"288","line":90,"column":15,"nodeType":"289","endLine":90,"endColumn":90},{"ruleId":"279","severity":1,"message":"286","line":34,"column":22,"nodeType":"281","messageId":"282","endLine":34,"endColumn":34},{"ruleId":"292","severity":1,"message":"306","line":43,"column":5,"nodeType":"294","endLine":43,"endColumn":7,"suggestions":"308"},{"ruleId":"287","severity":1,"message":"288","line":73,"column":7,"nodeType":"289","endLine":73,"endColumn":35},{"ruleId":"287","severity":1,"message":"288","line":92,"column":13,"nodeType":"289","endLine":92,"endColumn":97},{"ruleId":"279","severity":1,"message":"286","line":23,"column":22,"nodeType":"281","messageId":"282","endLine":23,"endColumn":34},{"ruleId":"292","severity":1,"message":"306","line":37,"column":5,"nodeType":"294","endLine":37,"endColumn":7,"suggestions":"309"},{"ruleId":"287","severity":1,"message":"288","line":56,"column":7,"nodeType":"289","endLine":56,"endColumn":92},{"ruleId":"279","severity":1,"message":"286","line":31,"column":22,"nodeType":"281","messageId":"282","endLine":31,"endColumn":34},{"ruleId":"292","severity":1,"message":"310","line":47,"column":6,"nodeType":"294","endLine":47,"endColumn":8,"suggestions":"311"},{"ruleId":"287","severity":1,"message":"288","line":93,"column":15,"nodeType":"289","endLine":93,"endColumn":103},{"ruleId":"279","severity":1,"message":"312","line":2,"column":8,"nodeType":"281","messageId":"282","endLine":2,"endColumn":19},{"ruleId":"279","severity":1,"message":"286","line":18,"column":24,"nodeType":"281","messageId":"282","endLine":18,"endColumn":36},{"ruleId":"279","severity":1,"message":"313","line":24,"column":12,"nodeType":"281","messageId":"282","endLine":24,"endColumn":19},{"ruleId":"279","severity":1,"message":"314","line":24,"column":21,"nodeType":"281","messageId":"282","endLine":24,"endColumn":31},{"ruleId":"292","severity":1,"message":"315","line":46,"column":7,"nodeType":"294","endLine":46,"endColumn":9,"suggestions":"316"},{"ruleId":"279","severity":1,"message":"280","line":1,"column":17,"nodeType":"281","messageId":"282","endLine":1,"endColumn":26},{"ruleId":"279","severity":1,"message":"317","line":1,"column":28,"nodeType":"281","messageId":"282","endLine":1,"endColumn":36},{"ruleId":"279","severity":1,"message":"318","line":2,"column":8,"nodeType":"281","messageId":"282","endLine":2,"endColumn":16},{"ruleId":"279","severity":1,"message":"319","line":2,"column":26,"nodeType":"281","messageId":"282","endLine":2,"endColumn":41},{"ruleId":"279","severity":1,"message":"280","line":1,"column":17,"nodeType":"281","messageId":"282","endLine":1,"endColumn":26},{"ruleId":"279","severity":1,"message":"317","line":1,"column":28,"nodeType":"281","messageId":"282","endLine":1,"endColumn":36},{"ruleId":"279","severity":1,"message":"320","line":17,"column":10,"nodeType":"281","messageId":"282","endLine":17,"endColumn":15},{"ruleId":"292","severity":1,"message":"321","line":31,"column":6,"nodeType":"294","endLine":31,"endColumn":8,"suggestions":"322"},{"ruleId":"287","severity":1,"message":"288","line":50,"column":9,"nodeType":"289","endLine":50,"endColumn":129},{"ruleId":"279","severity":1,"message":"317","line":1,"column":17,"nodeType":"281","messageId":"282","endLine":1,"endColumn":25},{"ruleId":"279","severity":1,"message":"280","line":1,"column":27,"nodeType":"281","messageId":"282","endLine":1,"endColumn":36},{"ruleId":"279","severity":1,"message":"304","line":5,"column":8,"nodeType":"281","messageId":"282","endLine":5,"endColumn":23},{"ruleId":"279","severity":1,"message":"318","line":6,"column":8,"nodeType":"281","messageId":"282","endLine":6,"endColumn":16},{"ruleId":"279","severity":1,"message":"286","line":20,"column":28,"nodeType":"281","messageId":"282","endLine":20,"endColumn":40},{"ruleId":"279","severity":1,"message":"323","line":22,"column":16,"nodeType":"281","messageId":"282","endLine":22,"endColumn":25},{"ruleId":"279","severity":1,"message":"324","line":22,"column":27,"nodeType":"281","messageId":"282","endLine":22,"endColumn":39},{"ruleId":"279","severity":1,"message":"325","line":26,"column":16,"nodeType":"281","messageId":"282","endLine":26,"endColumn":23},{"ruleId":"279","severity":1,"message":"326","line":26,"column":25,"nodeType":"281","messageId":"282","endLine":26,"endColumn":35},{"ruleId":"279","severity":1,"message":"317","line":1,"column":17,"nodeType":"281","messageId":"282","endLine":1,"endColumn":25},{"ruleId":"279","severity":1,"message":"286","line":20,"column":24,"nodeType":"281","messageId":"282","endLine":20,"endColumn":36},{"ruleId":"279","severity":1,"message":"304","line":5,"column":8,"nodeType":"281","messageId":"282","endLine":5,"endColumn":23},{"ruleId":"279","severity":1,"message":"318","line":6,"column":8,"nodeType":"281","messageId":"282","endLine":6,"endColumn":16},{"ruleId":"279","severity":1,"message":"286","line":20,"column":28,"nodeType":"281","messageId":"282","endLine":20,"endColumn":40},{"ruleId":"279","severity":1,"message":"323","line":22,"column":16,"nodeType":"281","messageId":"282","endLine":22,"endColumn":25},{"ruleId":"279","severity":1,"message":"324","line":22,"column":27,"nodeType":"281","messageId":"282","endLine":22,"endColumn":39},{"ruleId":"279","severity":1,"message":"327","line":26,"column":16,"nodeType":"281","messageId":"282","endLine":26,"endColumn":26},{"ruleId":"279","severity":1,"message":"328","line":26,"column":28,"nodeType":"281","messageId":"282","endLine":26,"endColumn":41},{"ruleId":"279","severity":1,"message":"318","line":3,"column":8,"nodeType":"281","messageId":"282","endLine":3,"endColumn":16},{"ruleId":"287","severity":1,"message":"288","line":23,"column":9,"nodeType":"289","endLine":23,"endColumn":47},{"ruleId":"279","severity":1,"message":"317","line":1,"column":17,"nodeType":"281","messageId":"282","endLine":1,"endColumn":25},{"ruleId":"279","severity":1,"message":"286","line":19,"column":28,"nodeType":"281","messageId":"282","endLine":19,"endColumn":40},{"ruleId":"287","severity":1,"message":"288","line":27,"column":9,"nodeType":"289","endLine":27,"endColumn":27},{"ruleId":"279","severity":1,"message":"320","line":16,"column":12,"nodeType":"281","messageId":"282","endLine":16,"endColumn":17},{"ruleId":"292","severity":1,"message":"329","line":30,"column":8,"nodeType":"294","endLine":30,"endColumn":10,"suggestions":"330"},{"ruleId":"287","severity":1,"message":"288","line":50,"column":11,"nodeType":"289","endLine":50,"endColumn":146},{"ruleId":"287","severity":1,"message":"288","line":25,"column":7,"nodeType":"289","endLine":25,"endColumn":80},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'userState' is assigned a value but never used.","'SongCard' is defined but never used.","'AlbumItem' is defined but never used.","'setUserState' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'isEnded' is assigned a value but never used.","'setIsEnded' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'audioRef.current'. Either exclude it or remove the dependency array. Mutable values like 'audioRef.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["331"],"React Hook useEffect contains a call to 'setHomeState'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [page] as a second argument to the useEffect Hook.",["332"],"React Hook useEffect has a missing dependency: 'obj'. Either include it or remove the dependency array. If 'setSongs' needs the current value of 'obj', you can also switch to useReducer instead of useState and read 'obj' in the reducer.",["333"],"React Hook useEffect has missing dependencies: 'setUserState' and 'userState'. Either include them or remove the dependency array.",["334"],"React Hook useEffect has a missing dependency: 'userState.username'. Either include it or remove the dependency array.",["335"],"'AudioUploadForm' is defined but never used.","'HomeCard' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["336"],["337"],["338"],"React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["339"],"'AudioPlayer' is defined but never used.","'songUrl' is assigned a value but never used.","'setSongUrl' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userState.user_id'. Either include it or remove the dependency array.",["340"],"'useState' is defined but never used.","'SongList' is defined but never used.","'BsFillPauseFill' is defined but never used.","'songs' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'album.album.songs'. Either include it or remove the dependency array. If 'setSongs' needs the current value of 'album.album.songs', you can also switch to useReducer instead of useState and read 'album.album.songs' in the reducer.",["341"],"'pageState' is assigned a value but never used.","'setPageState' is assigned a value but never used.","'albumId' is assigned a value but never used.","'setAlbumId' is assigned a value but never used.","'playlistId' is assigned a value but never used.","'setPlaylistId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'playlist.playlist.songs'. Either include it or remove the dependency array. If 'setSongs' needs the current value of 'playlist.playlist.songs', you can also switch to useReducer instead of useState and read 'playlist.playlist.songs' in the reducer.",["342"],{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"353","fix":"355"},{"desc":"353","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},"Update the dependencies array to be: []",{"range":"365","text":"366"},"Add dependencies array: [page]",{"range":"367","text":"368"},"Update the dependencies array to be: [obj]",{"range":"369","text":"370"},"Update the dependencies array to be: [searchTerm, setUserState, userState]",{"range":"371","text":"372"},"Update the dependencies array to be: [userState.username]",{"range":"373","text":"374"},"Update the dependencies array to be: [id]",{"range":"375","text":"376"},{"range":"377","text":"376"},{"range":"378","text":"376"},"Update the dependencies array to be: [username]",{"range":"379","text":"380"},"Update the dependencies array to be: [userState.user_id]",{"range":"381","text":"382"},"Update the dependencies array to be: [album.album.songs]",{"range":"383","text":"384"},"Update the dependencies array to be: [playlist.playlist.songs]",{"range":"385","text":"386"},[2255,2273],"[]",[2007,2007],", [page]",[716,718],"[obj]",[1026,1038],"[searchTerm, setUserState, userState]",[743,745],"[userState.username]",[1028,1030],"[id]",[1050,1052],[932,934],[1283,1285],"[username]",[1320,1322],"[userState.user_id]",[764,766],"[album.album.songs]",[856,858],"[playlist.playlist.songs]"]